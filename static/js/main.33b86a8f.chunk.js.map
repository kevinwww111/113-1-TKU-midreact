{"version":3,"sources":["components/Header.tsx","components/MovieList.tsx","components/MovieDetail.tsx","components/Footer.tsx","App.tsx","services/movieService.ts","reportWebVitals.ts","index.tsx"],"names":["Header","React","createElement","className","href","MovieList","_ref","movies","onMovieSelect","length","map","movie","key","id","src","posterPath","alt","title","style","width","onClick","MovieDetail","releaseDate","overview","onClose","Footer","Date","getFullYear","target","rel","App","setMovies","useState","selectedMovie","setSelectedMovie","showUpcoming","setShowUpcoming","async","console","log","upcomingMovies","response","fetch","json","results","release_date","poster_path","error","getUpcomingMovies","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.33b86a8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Movie Info</h1>\r\n      <nav>\r\n        <a href=\"#movies\">Movies</a>\r\n        <a href=\"#about\">About</a>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Movie } from '../types'; //導入 Movie 類型\r\n\r\ninterface MovieListProps {\r\n  movies: Movie[];\r\n  onMovieSelect: (movie: Movie) => void;\r\n}\r\n\r\nconst MovieList: React.FC<MovieListProps> = ({ movies, onMovieSelect }) => {\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.length === 0 ? (\r\n        <p>No movie available</p> // 如果没有電影數據，顯示此信息\r\n      ) : (\r\n        movies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-item\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${movie.posterPath}`}\r\n              alt={movie.title}\r\n              style={{ width: 200 }}\r\n              onClick={() => onMovieSelect(movie)} \r\n            />\r\n            <h3>{movie.title}</h3>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n\r\n","import React from 'react';\r\nimport './MovieDetail.css';\r\n\r\ntype MovieDetailProps = {\r\n  title: string;\r\n  releaseDate: string;\r\n  overview: string;\r\n  posterPath: string;\r\n  onClose: () => void; // 關閉詳細資訊的按鈕\r\n};\r\n\r\nconst MovieDetail: React.FC<MovieDetailProps> = ({\r\n  title,\r\n  releaseDate,\r\n  overview,\r\n  posterPath,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <div className=\"movie-detail\">\r\n      <button className=\"close-btn\" onClick={onClose}>\r\n        X\r\n      </button>\r\n      <h2>{title}</h2>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${posterPath}`}\r\n        alt={title}\r\n        className=\"movie-poster\"\r\n      />\r\n      <p><strong>Release Date:</strong> {releaseDate}</p>\r\n      <p>{overview}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>&copy; {new Date().getFullYear()} Movie Info. All rights reserved.</p>\r\n      <p>\r\n        Powered by <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">TMDB</a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport { Movie } from './types';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\nimport MovieDetail from './components/MovieDetail';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { getUpcomingMovies } from './services/movieService'; // 獲取即將上映電影的函数\n\nconst App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]); // 初始为空的電影列表\n  const [selectedMovie, setSelectedMovie] = useState<Movie | null>(null); // 選中的电影\n  const [showUpcoming, setShowUpcoming] = useState(false); // 是否顯示示即將上映电影\n\n  // 獲取即將上映電影\n  const handleUpcomingMovies = async () => {\n    console.log('Fetching upcoming movies...');\n    const upcomingMovies = await getUpcomingMovies();\n    setMovies(upcomingMovies); // 更新電影列表\n    setShowUpcoming(true); \n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <button className=\"upcoming-button\" onClick={handleUpcomingMovies}>\n        Show Upcoming Movies\n      </button>\n      {selectedMovie ? (\n        <MovieDetail\n          title={selectedMovie.title}\n          releaseDate={selectedMovie.releaseDate}\n          overview={selectedMovie.overview}\n          posterPath={selectedMovie.posterPath}\n          onClose={() => setSelectedMovie(null)}\n        />\n      ) : (\n        <MovieList\n          movies={movies}\n          onMovieSelect={(movie: Movie) => setSelectedMovie(movie)}\n         /> \n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;","import axios from 'axios';\r\nimport { Movie } from '../types';\r\n\r\nconst API_KEY = 'a1b4e5017eaecc98bb96575c12d1c4d3';\r\nconst API_URL = 'https://api.themoviedb.org/3/movie/upcoming';\r\n\r\nexport const getUpcomingMovies = async (): Promise<Movie[]> => {\r\n  const apiKey = 'a1b4e5017eaecc98bb96575c12d1c4d3';\r\n  const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`;\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data.results.map((movie: any) => ({\r\n      id: movie.id,\r\n      title: movie.title,\r\n      releaseDate: movie.release_date,\r\n      overview: movie.overview,\r\n      posterPath: movie.poster_path,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching upcoming movies:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// a1b4e5017eaecc98bb96575c12d1c4d3","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}